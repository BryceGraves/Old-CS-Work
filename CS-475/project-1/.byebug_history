exit
one_thread_max
four_thread_max
exit
four_thread_data = data.select { |line| line.first == '1' }.map(&:last).map(&:to_i).max
four_thread_data = data.select { |line| line.first == '4' }.map(&:last).map(&:to_i).max
four_thread_data = data.select { |line| line.first == '4' }.map(&:last).map(&:to_i).sum
four_thread_data
one_thread_data
exit
output.lines[22]
output.lines[26]
output.lines[25]
output.lines[24]
output.lines[23]
output.lines[21]
output.lines[25]
output.lines[20]
output.lines[17]
output.lines[13]
output.lines[10]
output.lines.last
output.lines.lasat
output.lines
output
exit
current_selection.first.last
current_selection.first
current_selection
exit
output.lines.select { |line| line.split(',').first == '1' }
output.lines.split(',').map(&:chomp)
output.lines.map(&:split).last
output.lines.map(&:split).first
output.lines.map(&:split)
output.map(&:split)
output.lines.map(&:split)
output
output.lines.map(&:split)
output.lines.map(&:split ',')
output.lines.map(&:split ,)
output.lines.map(&:split)
output.lines.map(&:split(','))
output.lines.map(&:split(',')).map(&:chomp)
output.lines.split(',').map(&:chomp)
output.lines.last.split(',').map(&:chomp)
output.lines.last.split(',').last.chomp
output.lines.last.split(',').last
output.lines.last.split(',').first
output.lines.select { |line| line.split(',').first == '1' }
output.lines.last.split(',').first == '4'
output.lines.last.split(',').first == 4
output.lines.last.split(',').first
output.lines.last.split(',')
output.lines.first.split(',')
output.lines.select { |line| line.split(',').first == 1 }
output.lines.last.split(',')
output.lines.each { |i| puts i }
output.lines.last
output.lines.second
output.lines.first
output.lines
output
exit
