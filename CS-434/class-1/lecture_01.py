# -*- coding: utf-8 -*-
"""Lecture 01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ccb8UZ7H8yficxD3Vip96XIs5CbWGHyr

# Lecture 01 - Overview of Machine Learning.

***
##### CS 434 - Dating Mining and Machine Learning
##### Oregon State University-Cascades
***

# <img src="https://img.icons8.com/color/32/000000/question-shield.png"/> What is machine learning

[Machine learning](https://en.wikipedia.org/wiki/Machine_learning) (ML) is a subfield of [artificial intelligence](https://en.wikipedia.org/wiki/Artificial_intelligence) (AI) involving self-learning algorithms that derive knowledge from data in order to make participation.

![alt text](https://i.vas3k.ru/7vw.jpg)

Machine learning is algorithms applied on features from data.

![alt text](https://i.vas3k.ru/7r8.jpg)

There are many types of machine learning.

![alt text](https://i.vas3k.ru/7vx.jpg)

# <img src="https://img.icons8.com/color/32/000000/terms-and-conditions.png"/> Terminology

* **Training example**: a row in a table representing he dataset and synonymous with an *observation, record, instance,* or *sample*.
* **Training**: model fitting, for parametric models
* **Features**: a column in a data table or data matrix, synonymous with *predictor, variable, input, attribute,* or *covariate*.
* **Target**: Synonymous with *outcomes, output, response variable, dependent variable, class label,* and *ground truth*. 
* *Loss function*: often synonymous with *cost* function or *error* function.

![alt text](https://github.com/rasbt/python-machine-learning-book-3rd-edition/blob/master/ch01/images/01_08.png?raw=true)

### Notation
* $\mathbf{X}$ is a *matrix* that represents the features (one or more per sample)
* $y$ is a *vector* that represents the class labels (one per sample)

# <img src="https://img.icons8.com/color/32/000000/serial-tasks.png"/> Machine learning system

Illustration of a typical machine learning pipeline.

![alt text](https://github.com/rasbt/python-machine-learning-book-3rd-edition/blob/master/ch01/images/01_09.png?raw=true)

# <img src="https://img.icons8.com/color/32/000000/3.png"/> Three types of machine learning

Machine learning is generally discussed in three categories:
1. Supervised
2. Unsupervised
3. Reinforcement

## <img src="https://img.icons8.com/color/32/000000/bust.png"/> Classical machine learning

![alt text](https://i.vas3k.ru/7w1.jpg)

![alt text](https://raw.githubusercontent.com/rasbt/python-machine-learning-book-3rd-edition/master/ch01/images/01_01.png)

![alt text](https://i.pinimg.com/originals/37/e8/bb/37e8bb0cf3705fe82e0ddf316a02a8b7.png)

## <img src="https://img.icons8.com/color/32/000000/training.png"/> Supervised learning

Make predictions about the future based on past labeled data

![alt text](https://github.com/rasbt/python-machine-learning-book-3rd-edition/blob/master/ch01/images/01_02.png?raw=true)

### <img src="https://img.icons8.com/color/32/000000/search.png"/>  Classification

Predict class labels  of new instances, based on past observations.

***
<img src="https://img.icons8.com/color/32/000000/new-document.png"/>  Example
> Classify emails as `spam` or `not-spam`.
***

![alt text](https://github.com/rasbt/python-machine-learning-book-3rd-edition/blob/master/ch01/images/01_03.png?raw=true)

***
<img src="https://img.icons8.com/color/32/000000/bookmark-ribbon.png"/> Common algorithms: [Naive Bayes](https://en.wikipedia.org/wiki/Naive_Bayes_classifier), [Decision Tree](https://en.wikipedia.org/wiki/Decision_tree), [Logistic Regression](https://en.wikipedia.org/wiki/Logistic_regression), [K-Nearest  Neighbours](https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm), [Support Vector Machine](https://en.wikipedia.org/wiki/Support-vector_machine)
***

#### Naive Bayes
![alt text](https://i.vas3k.ru/7w2.jpg)

#### Decision tree
![alt text](https://i.vas3k.ru/7w3.jpg)

#### Support vector machine
![alt text](https://i.vas3k.ru/7w4.jpg)

### <img src="https://img.icons8.com/color/32/000000/formula-fx.png"/> Regression

Predict continuous outcomes for new instances, based on the relationship between a number of predictor (explantory) variables and a continuous response variable (outcome).

![alt text](https://github.com/rasbt/python-machine-learning-book-3rd-edition/blob/master/ch01/images/01_04.png?raw=true)

***
<img src="https://img.icons8.com/color/32/000000/bookmark-ribbon.png"/>  Common algorithms: [Linear](https://en.wikipedia.org/wiki/Linear_regression) and [Polynomial](https://en.wikipedia.org/wiki/Polynomial_regression) regressions.
***

![alt text](https://i.vas3k.ru/7w5.jpg)

## <img src="https://img.icons8.com/color/32/000000/front-gate-open.png"/> Unsupervised learning

Unsupervised learning explores the structure of data to extract meaningful information without the guidance of a known outcome variable.

### <img src="https://img.icons8.com/color/32/000000/line-chart.png"/> Clustering

Find meaningful subgroups (clusters) with clustering, without proper knowledge of group membership.

![alt text](https://github.com/rasbt/python-machine-learning-book-3rd-edition/blob/master/ch01/images/01_06.png?raw=true)

***
<img src="https://img.icons8.com/color/32/000000/bookmark-ribbon.png"/> Common algorithms: [K-means_clustering](https://en.wikipedia.org/wiki/K-means_clustering),[ Mean-Shift](https://en.wikipedia.org/wiki/Mean_shift), [DBSCAN](https://en.wikipedia.org/wiki/DBSCAN)
***

![alt text](https://i.vas3k.ru/7w6.jpg)

### <img src="https://img.icons8.com/color/32/000000/change.png"/> Dimensionality reduction

Compress data with dimensionality reduction

![link text](https://github.com/rasbt/python-machine-learning-book-3rd-edition/blob/master/ch01/images/01_07.png?raw=true)

***
<img src="https://img.icons8.com/color/32/000000/bookmark-ribbon.png"/>  Common algorithms: [Principal Component Analysis](https://en.wikipedia.org/wiki/Principal_component_analysis) (PCA), [Singular Value Decomposition](https://en.wikipedia.org/wiki/Singular_value_decomposition) (SVD), [Latent Dirichlet allocation](https://en.wikipedia.org/wiki/Latent_Dirichlet_allocation) (LDA), [Latent Semantic Analysis](https://en.wikipedia.org/wiki/Probabilistic_latent_semantic_analysis) (LSA, pLSA, GLSA), [t-SNE](https://en.wikipedia.org/wiki/T-distributed_stochastic_neighbor_embedding) (for visualization)
***

![alt text](https://i.vas3k.ru/7w7.jpg)

### <img src="https://img.icons8.com/color/32/000000/feedback.png"/> Reinforcement learning

Solve interactive problems with reinforcement learning in which an agent improves its performance based on interactions with the environment.

![alt text](https://github.com/rasbt/python-machine-learning-book-3rd-edition/blob/master/ch01/images/01_05.png?raw=true)

***
<img src="https://img.icons8.com/color/32/000000/bookmark-ribbon.png"/>  Common algorithms: [Q-Learning](https://en.wikipedia.org/wiki/Q-learning), [SARSA](https://en.wikipedia.org/wiki/State%E2%80%93action%E2%80%93reward%E2%80%93state%E2%80%93action), DQN, [A3C](https://medium.com/emergent-future/simple-reinforcement-learning-with-tensorflow-part-8-asynchronous-actor-critic-agents-a3c-c88f72a5e9f2), [Genetic algorithm](https://en.wikipedia.org/wiki/Genetic_algorithm)
***

<img src="https://img.icons8.com/color/32/000000/video.png"/>  Video: Learning to play Super Mario Brothers with reinforcement learning (6 min)
"""

# https://www.youtube.com/watch?v=qv6UVOQ0F44
from IPython.display import YouTubeVideo
YouTubeVideo('qv6UVOQ0F44')

"""![alt text](https://i.vas3k.ru/7wa.jpg)

# <img src="https://img.icons8.com/color/32/000000/music-conductor.png"/> Ensemble methods

Combine multiple algorithms together to collectively decide the outcome.

![alt text](https://i.vas3k.ru/7r3.jpg)

***
<img src="https://img.icons8.com/color/32/000000/bookmark-ribbon.png"/>  Common algorithms: [Random Forest](https://en.wikipedia.org/wiki/Random_forest), [Gradient Boosting](https://en.wikipedia.org/wiki/Gradient_boosting)
***

## <img src="https://img.icons8.com/color/32/000000/stack.png"/>  Stacking

Stacking uses the training set to fit a group of individual classifiers.

![alt text](https://i.vas3k.ru/7wb.jpg)

## <img src="https://img.icons8.com/color/32/000000/chalk-bag.png"/> Bagging
Bagging draws bootstrap samples (random with replacement) from the training set to fit a group of individual classifiers.

![alt text](https://i.vas3k.ru/7wd.jpg)

## <img src="https://img.icons8.com/color/32/000000/launched-rocket.png"/>  Boosting
Boosting uses a sequence of learners, in which instances that were misclassified by the previous learners are given more weight so that subsequent learners give more focus to them during training.

![alt text](https://i.vas3k.ru/7we.jpg)

# <img src="https://img.icons8.com/color/32/000000/artificial-intelligence.png"/>  Neural networks

***
<img src="https://img.icons8.com/color/32/000000/bookmark-ribbon.png"/>  Common architectures: [Perceptron](https://en.wikipedia.org/wiki/Perceptron), [Convolutional Network](https://en.wikipedia.org/wiki/Convolutional_neural_network) (CNN), [Recurrent Networks](https://en.wikipedia.org/wiki/Recurrent_neural_network) (RNN), [Autoencoders](https://en.wikipedia.org/wiki/Autoencoder)
***

## <img src="https://img.icons8.com/color/32/000000/neuron.png"/> Perceptron
A perceptron is a binary classifier that uses a function to decide whether or not an input, represented by a vector of numbers, belongs to some specific class.

![alt text](https://i.vas3k.ru/7wf.jpg)

## <img src="https://img.icons8.com/color/32/000000/genealogy.png"/>  Multilayer Perceptron (MLP)
A Multilayer perceptron connects multiple single neurons in a fully connected network, consisting on one input layer, one or more hidden layers, and one output layer. 

> <img src="https://img.icons8.com/color/32/000000/light-on.png"/> When there are more than one hidden layers, it can be called a deep artificial neural network.

![alt text](https://i.vas3k.ru/7wg.jpg)

### <img src="https://img.icons8.com/color/32/000000/video.png"/>  Video: introduction to neural networks (20 min)
"""

# https://youtu.be/aircAruvnKk
YouTubeVideo('aircAruvnKk')

"""## <img src="https://img.icons8.com/color/32/000000/mind-map.png"/> Convolutional neural nets

Convolutional networks are neural networks that use mathematical [convolution](https://en.wikipedia.org/wiki/Convolution) in place of general matrix multiplication in at least one of their layers.

![alt text](https://i.vas3k.ru/7wj.jpg)

Convolutional networks are readily used in 
* image and video recognition
* recommender systems
* image classification
* medical image analysis
* natural language processing

![alt text](https://i.vas3k.ru/7rz.jpg)

Convolutional networks may include local or global pooling layers to streamline the underlying computation.

![alt text](https://i.vas3k.ru/74s.jpg)

## <img src="https://img.icons8.com/color/32/000000/available-updates.png"/>  Recurrent neural nets

Recurrent neural networks form connections between nodes form a directed graph along a temporal sequence.

![alt text](https://i.vas3k.ru/7wk.jpg)

### <img src="https://img.icons8.com/color/32/000000/video.png"/>  Video: Recurrent neural nets tries to learn to speak (14 min)
"""

# https://youtu.be/NG-LATBZNBs
YouTubeVideo('NG-LATBZNBs')

"""### <img src="https://img.icons8.com/color/32/000000/video.png"/>  Video: Thanks Fake Obama (1 min)"""

# https://youtu.be/cQ54GDm1eL0
YouTubeVideo('cQ54GDm1eL0')

"""### <img src="https://img.icons8.com/color/32/000000/categorize.png"/> Types of neural networks
There are many different neural network architectures.

![alt text](https://i.vas3k.ru/7rx.png)

***

# <img src="https://img.icons8.com/color/32/000000/chat.png"/> Discussion

1. How has your understanding of AI vs ML changed?

1. Can every problem be solved with ML? Why or why not?

1. Why don't we just find one best algorithm to solve all problems?

1. Which types of math do you think will be most useful in ML?

1. Since ML is so useful, should we bother studying other types of AI?

***
"""
