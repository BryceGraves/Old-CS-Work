; arg: 1 - input buffer, 2 - input buffer length, 3 - number of bytes read in
%macro read_input 3
	;read result
	mov  edx, %2           ;move passed buffer length into edx
	mov  ecx, %1           ;move input buffer pointer to ecx
	mov  ebx, 0            ;move sys_read system call to ebx
	mov  eax, 3            ;move stdin system call to eax
	int  0x80              ;kernel call for above

	dec  eax               ;lower length by 1 to ignore return characteer
	mov  [%3], dword eax   ;pass length to memory value

%endmacro

; arg: 1 - output buffer; 2 - output buffer length
%macro write_output 2
	;write result
	mov  eax, 4    ;move stdout system call to eax
	mov  ebx, 1    ;move sys_write system call to ebx
	mov  ecx, %1   ;move output buffer pointer to ecx
	mov  edx, %2   ;move output buffer length to edx
	int  0x80      ;kernel call for above
%endmacro

